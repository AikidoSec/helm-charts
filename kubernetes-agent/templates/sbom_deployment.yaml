{{- if eq .Values.config.isSBOMCollectorRunningAsDaemonSet false }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "kubernetes-sbom-collector"
  labels:
    {{- include "kubernetes-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      aikido-security: kubernetes-sbom-collector
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
      labels:
        aikido-security: kubernetes-sbom-collector
        {{- include "kubernetes-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kubernetes-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.sbomCollector.repository }}:{{ .Values.sbomCollector.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["-health-probe-bind-address=:{{ .Values.healthCheck.port }}"]
          env:
            - name: AGENT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          ports:
            - name: health
              containerPort: {{ .Values.healthCheck.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /healthz
              port: health
          readinessProbe:
            initialDelaySeconds: 60
            httpGet:
              path: /readyz
              port: health
          resources:
            {{- toYaml .Values.sbomCollector.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /.ecr
              name: ecr-cache-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir: { }
        - name: ecr-cache-config
          emptyDir: { }
{{- end }}
