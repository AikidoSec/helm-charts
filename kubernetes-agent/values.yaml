image:
  repository: 'public.ecr.aws/f2p6e0z8/kubernetes-agent'
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

sbomCollector:
  repository: 'public.ecr.aws/f2p6e0z8/kubernetes-sbom-collector'
  pullPolicy: IfNotPresent
  tag: 'collector'
  name: 'aikido-kubernetes-sbom-collector'
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
      ephemeral-storage: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi
      ephemeral-storage: 1Gi

config:
  apiToken: ''
  apiEndpoint: 'https://k8s.aikido-security.com'
  controllerCacheSyncTimeout: '5m'
  
  # Alternative: Reference an existing secret containing the API token
  # If specified, this takes precedence over config.apiToken
  # Note: The agent's ServiceAccount will be granted read access to this secret
  existingSecret:
    # Name of the existing secret
    name: ''
    # Key within the secret that contains the API token
    key: 'apiToken'

  # If set to true, the agent will run the SBOM collector as a daemonset.
  # Otherwise, it will run it as a deployment.
  # If sbomCollector.enabled is set to false, no replicas will be created.
  runSBOMCollectorAsDaemonSet: true

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

networkPolicy:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

healthCheck:
  port: 8081

resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 500m
    memory: 500Mi
