agent:
  image:
    repository: 'kubernetes-agent'
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 'collector'
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 500m
      memory: 500Mi # Only Mi and Gi are supported

sbomCollector:
  image:
    repository: 'kubernetes-sbom-collector'
    pullPolicy: IfNotPresent
    tag: 'collector'
  name: 'aikido-kubernetes-sbom-collector'
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
      ephemeral-storage: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi # Only Mi and Gi are supported
      ephemeral-storage: 1Gi
  daemonSetTolerations:
    # these tolerations are to have the daemonset runnable on control plane nodes
    # remove them if your control plane nodes should not run pods
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule

config:
  apiToken: ''
  apiEndpoint: 'https://k8s.aikido-security.com'
  controllerCacheSyncTimeout: '5m'
  isSBOMCollectionEnabled: false

  # If set to true, the agent will run the SBOM collector as a daemonset.
  # Otherwise, it will run it as a deployment.
  # If sbomCollector.enabled is set to false, no replicas will be created.
  runSBOMCollectorAsDaemonSet: true

  # HTTP proxy configuration
  proxy:
    # HTTP proxy URL (e.g., http://proxy.company.com:8080)
    httpProxy: ''
    # HTTPS proxy URL (e.g., http://proxy.company.com:8080)
    httpsProxy: ''
    # Comma-separated list of hosts to bypass proxy (e.g., localhost,127.0.0.1,.local)
    noProxy: ''

imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''

networkPolicy:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

healthCheck:
  port: 8081

nodeSelector: {}

affinity: {}

tolerations: []
